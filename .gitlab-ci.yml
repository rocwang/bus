# Cache .npm instead of node_modules because the later one will be automatically removed by `npm ci`
# https://docs.npmjs.com/cli/ci.html
# https://docs.npmjs.com/cli/cache

.npm_install: &npm_install
  cache: &cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - ${CI_PROJECT_DIR}/.npm/
      - ${CI_PROJECT_DIR}/.cypress/
    policy: pull
  before_script: &before_script
    - export CYPRESS_CACHE_FOLDER=${CI_PROJECT_DIR}/.cypress
    - npm config set cache ${CI_PROJECT_DIR}/.npm
    - npm ci --prefer-offline

stages:
  - build database
  - build
  - test
  - deploy

build database builder:
  image: docker:stable
  services:
    - docker:dind
  stage: .pre
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd src/database
    - docker build -t $CI_REGISTRY/rocwang/bus-bus/database-builder:latest .
    - docker push $CI_REGISTRY/rocwang/bus-bus/database-builder:latest
  only:
    refs:
      - master
    changes:
      - src/database/Dockerfile

build database:
  image: $CI_REGISTRY/rocwang/bus-bus/database-builder
  stage: build database
  cache:
    <<: *cache
    policy: pull-push
  before_script: *before_script
  script:
    - cd src/database
    - make
  artifacts:
    expire_in: 1 week
    paths:
      - src/database/gtfs.sqlite3
      - src/database/gtfs.sqlite3.br

build:
  image: node:12
  stage: build
  <<: *npm_install
  script:
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist

unit test:
  image: node:12
  stage: build
  <<: *npm_install
  script:
    - npm run test:unit -- --coverage
  artifacts:
    expire_in: 1 week
    paths:
      - coverage

e2e test:
  image: cypress/browsers:node12.14.0-chrome79-ff71
  stage: test
  <<: *npm_install
  script:
    - npm run test:e2e -- --headless --browser chrome

lighthouse:
  image: cypress/browsers:node12.14.0-chrome79-ff71
  stage: test
  <<: *npm_install
  script:
    - 'npx netlify deploy
      --dir=dist
      --message="#${CI_COMMIT_SHORT_SHA} on ${CI_COMMIT_REF_NAME}: ${CI_COMMIT_TITLE}"
      | tee netlify-deploy.log'
    - mkdir -p lighthouse
    - npx lighthouse $(grep "Live Draft URL" netlify-deploy.log | grep -o 'https://.*\.netlify\.com')
      --budget-path=./tests/budgets/home.json
      --output json html
      --output-path ./lighthouse/audit
      --emulated-form-factor=mobile
      --throttling-method=provided
      --chrome-flags="--headless --no-sandbox"
    - node ./tests/budgets/check-lighthouse-report.js ./lighthouse/audit.report.json
  artifacts:
    expire_in: 1 week
    paths:
      - lighthouse
    when: always

deploy:
  image: node:12
  stage: deploy
  <<: *npm_install
  script:
    - 'npx netlify deploy
      --dir=dist
      --prod
      --message="#${CI_COMMIT_SHORT_SHA} on ${CI_COMMIT_REF_NAME}:
      ${CI_COMMIT_TITLE}"'
  only:
    - master
